"""
Django settings for prayer project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os

from pathlib import Path

from django_archive import archivers


# Root directory of the project source code
BASE_DIR = Path(__file__).resolve().parent.parent

# Root directory for storage
DATA_DIR = Path(os.environ.get('DATA_DIR', '/data')).resolve()

# Common site information
SITE_NAME = os.environ.get('SITE_NAME', "RH Prayer")
SITE_DOMAIN = os.environ.get('SITE_DOMAIN', 'prayer.quickmediasolutions.com')


#################
# Core settings #
#################

DEBUG = 'DEBUG' in os.environ
SECRET_KEY = os.environ.get('SECRET_KEY', 'DEBUG' if DEBUG else '')

ALLOWED_HOSTS = [] if DEBUG else [SITE_DOMAIN]
USE_X_FORWARDED_HOST = True

ROOT_URLCONF = 'prayer.urls'
WSGI_APPLICATION = 'prayer.wsgi.application'

USE_TZ = True
TIME_ZONE = 'UTC'

AUTH_USER_MODEL = 'accounts.User'


################
# Applications #
################

INSTALLED_APPS = [

    # Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'django_archive',
    'rest_framework',

    # Project apps
    'accounts',
    'core',
]


############
# Database #
############

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('DB_NAME', 'postgres'),
        'USER': os.environ.get('DB_USER', 'postgres'),
        'PASSWORD': os.environ.get('DB_PASSWORD', ''),
        'HOST': os.environ.get('DB_HOST', 'postgres'),
    }


#########
# Email #
#########

DEFAULT_FROM_EMAIL = "{} <donotreply@{}>".format(
    SITE_NAME,
    SITE_DOMAIN,
)

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    EMAIL_BACKEND = 'pyhectane.django.HectaneBackend'
    HECTANE_HOST = os.environ.get('HECTANE_HOST', 'hectane')


###############
# Media files #
###############

MEDIA_ROOT = (BASE_DIR if DEBUG else DATA_DIR) / 'media'
MEDIA_URL = '/media/'


################
# Static files #
################

STATIC_ROOT = '/srv/static/'
STATIC_URL = '/static/'

if DEBUG:
    STATICFILES_DIRS = [
        BASE_DIR / 'static',
    ]


#############
# Templates #
#############

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


########
# Misc #
########

# Settings for django-archive
ARCHIVE_DIRECTORY = DATA_DIR / 'archives'
ARCHIVE_FORMAT = archivers.TARBALL_GZ

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
